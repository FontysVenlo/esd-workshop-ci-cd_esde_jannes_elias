name: CI (Build & Test)

on:
  push:
    branches: "**"
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened, ready_for_review ]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# OIDC for Codecov + write perms for test publisher on same-repo PRs
permissions:
  contents: read
  checks: write
  pull-requests: write
  id-token: write

jobs:
  build:
    name: CI (Build & Test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle (cache)
        uses: gradle/actions/setup-gradle@v4

      # One call: build, tests, and coverage (prevents cleaning artifacts away)
      - name: Build, test & coverage
        run: ./gradlew clean test jacocoTestReport bootJar

      - name: Show coverage file exists
        run: ls -lh build/reports/jacoco/test/jacocoTestReport.xml

      - name: Upload coverage artifact (HTML)
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html

      # Upload to Codecov via OIDC; skip on forked PRs
      - name: Upload coverage to Codecov (OIDC)
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        uses: codecov/codecov-action@v4
        with:
          files: build/reports/jacoco/test/jacocoTestReport.xml
          use_oidc: true
          slug: FontysVenlo/esd-workshop-ci-cd_esde_jannes_elias
          fail_ci_if_error: true

      # Publish unit test results; skip on forked PRs to avoid 403 creating check-runs
      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ always() && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository) }}
        with:
          files: '**/build/test-results/test/*.xml'

      - name: Upload build artifact (jar)
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar
          if-no-files-found: error
          retention-days: 7

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # run only on pushes (PRs/forks wonâ€™t have perms to write the graph)
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
        continue-on-error: true

